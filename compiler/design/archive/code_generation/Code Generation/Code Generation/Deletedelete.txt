///////////////////////////////See later//////////////////////////////////////
procedure endskip;
procedure skip( fsys:symset; n:integer);

procedure block( fsys: symset; isfun: boolean; level: integer );

    /////////////////////////////Umm not sure yet about selector///////////////////////////////
    procedure selector(fsys:symset; var v:item);

	///////////////////////If it's a funct/proc call statement/////////////////////////
		///////////////////Then check the parameter, cp++;/////////////////////////////
		///////////////////If tab[cp].normal check express until ',', ':' or ')' found/
			///////////////if x.typ = tab[cp].typ//////////////////////////////////////
				///////////If x.ref != tab[cp].ref error(36)///////////////////////////
				///////////else if x.typ = array emit1(22,atab[x.ref].size)////////////
				///////////else if x.typ = record emit1(22,btab[x.ref].vsize)//////////
			///////////////else if x.typ=int and tab[cp].typ = real emit1(26,0)////////
			///////////////else if x.typ != notyp error(36)////////////////////////////
		///////////////////else if sy != ident error(2)////////////////////////////////
		///////////////////else see if ident defined, if yes if tab[k].obj != var error(37)
		///////////////////x.typ = tab[k].typ, x.ref = tab[k].ref//////////////////////
		///////////////////if tab[l].normal emit2(0,tab[k].lev,tab[k].adr)/////////////
		///////////////////else emit2(1,tab[k].lev,tab[k].adr)/////////////////////////
    procedure call( fsys: symset; i:integer );

	//////////////////////////////Check assign statement///////////////////////////////////////////
	procedure assignment( lv, ad: integer );
		//////////////////////////if valtab[i] is var or proc://///////////////////////////////////
			//////////////////////x.typ := tab[i].typ; x.ref := tab[i].ref;////////////////////////
			//////////////////////If tab[i].normal: f := 0; else f := 1;///////////////////////////
			//////////////////////emit2(f,lv,ad);//////////////////////////////////////////////////
			//////////////////////If x.typ = y.typ:////////////////////////////////////////////////
				//////////////////If x.typ = constVal: then emit(38);//////////////////////////////
				//////////////////Else if x.typ = array: emit1(23,atab[x.ref].size);///////////////
				//////////////////Else emit1(23,btab[x.ref].vsize);////////////////////////////////
			//////////////////////Else if (x.typ = reals )and (y.typ = ints)://////////////////////
				//////////////////emit1(26,0); emit(38);///////////////////////////////////////////
				
	//////////////////////////////Check if statement///////////////////////////////////////////////
	procedure ifstatement;
		//////////////////////////lc1 = lc; if else found://///////////////////////////////////////
			//////////////////////lc2 = lc; emit(10); code[lc1].y := lc; code[lc2].y := lc;////////
		//////////////////////////else code[lc1].y := lc;//////////////////////////////////////////

	//////////////////////////////Check for statement///////////////////////////////////////////////
	procedure forstatement;
			//////////////////////If downto: f = 16/////////////////////////////////////////////////
		//////////////////////////lc1 = lc; emit(f); lc2 = lc; emit1(f+1,lc2); code[lc1].y := lc////