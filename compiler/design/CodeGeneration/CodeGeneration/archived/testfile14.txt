const int A1 = 0, a = 6, a2 = +7, a3 = -7;
const char c = 'c', d = '7';

char ch;
int i, num;
int arr[20], arr2[9];
char charr[5];
char rel[9], m;

int testWhile(char f, int f, int g)
{
	int b, g, e, j, k;

	while (i) printf(a);
	while (a) 
		while (b) b = b - 1;
	while (c)
		do printf(c); while (d)
	while (d)
		do 
			while (f) scanf(f);
		while (g)
	do
		do
			while (j) scanf(e);
		while (k)
	while (u)

	return (2);
}

char subState(char x)
{
	char c, far[100];
	int temp, cad, abc, def, bca;

	temp = 26;

	far[0] = 'a';
	far[100] = 'z'

	c = temp;
	c = far[0];

	c = 'b';
	c = ch;
	c = charr[0];
	c = charr[arr[1]];
	charr[arr[1]] = c;
	
	c = 'c' + 'd';
	i = g;
	i = 1 + 2;
	i = num;
	i = arr[0];
	i = arr[arr[5]];

	c = subState(subState('5'));
	c = subState(testWhile(1, 2));

	c = subState('2') + 'a';
	c = subState('3') + subState('4');

	c = charr[charr[3]];
	c = charr[subState('f')];
	i = arr[charr[0]];
	i = testWhile(subState('c'), num);

	{
		subState();
		subState(a);
		subState(a, b);
		subState((h*7/3));
		subState((1+3/2-4)/54, a, c);
		subState((1-2-3-4/5/6*6), a+3/2-(2), (2/3));
		scanf(a);
		scanf(a, b);
		printf("YEAYEA! Emmmm !@#$%&(*^#Q");
		printf("HUHUHU~~~", a);
		printf("HIHIHI&^%$&@", a+(b)/(3*43/rea)-2+3);
		printf((b+4/3*2-(1-2)));

		;

		if (cad<10) printf("ONLY");

		if (abc) if (def) printf("DOUBLE");
		
		if (cad<10) printf("YEY");
		else printf("DANGER");
		
		do printf("DODO"); while (1>2)

		while (i<10) i= i+1;

		printf("i now: ", i);

		while (i<10) 
			do {
				for (r = 10; r > 1; r = r - 1) 
					sum = sum + r;
				i = i + 2;
				printf("i: ", i);
			} while (1>2)

		while (a>10){
			i = i+2;
			a = a - 1;

			printf("a-i", a, i);
		}

		if (bca>=210) {
			scanf(a, b);
			printf("HEHE");
		} else printf("ELSE ELSE!");
	
		if (1) printf("ONE!");
		else if (32) printf("DANGER");
		else printf("SURPRISE!");
		
		;;
		return('c');
	}
}

void swap(int x, int y)
{
	int temp;
	temp = x;
	x = y;
	y = temp;

	printf("");
	return;
}

void testExp()
{
	int r, sum;
	sum = 0;
	for (r = 10; r > 1; r = r - 1) 
		sum = sum + r;
	printf(sum);
	;
	sum = (A1+2)*a3/7;
	arr['c'] = r;
	arr[1] = arr[1]+2+2;
	charr[1+1] = 'c';
	charr[0] = subState(charr[2]);

	printf(charr);

	printf("done Exp!");
	return;
}

int retInt(int n)
{
	int x, y;
	x = 1;
	y = 2;
	x = x + y + n;
	
	return (x);
}

char retChar(char p)
{
	printf(p);
	p = 'u';
	printf("What is p?", p);

	return (p);
}

void main()
{
	const int emm = 3;
	const char ugh = 'y';

	int u, l[9];
	int bla[12];
	char zzz, wake[1], hmm[3];

	printf("Test char limits");
	printf("!#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^`abcdefghijklmnopqrstuvwxyz{|}~");
	scanf(i, num);
	;
	;
	swap(i, num);
	testExp();
	bla[3] = retInt(emm);
	u = bla[0] + bla[1] + 1;
	zzz = retChar(ugh);
	charr[3*1] = zzz;
	printf(charr[3+1]);
}