CONSTTK const
INTTK int
IDENFR const1
ASSIGN =
INTCON 1
COMMA ,
IDENFR const2
ASSIGN =
PLUS +
INTCON 7
COMMA ,
IDENFR const3
ASSIGN =
MINU -
INTCON 6
SEMICN ;
CONSTTK const
CHARTK char
IDENFR const4
ASSIGN =
CHARCON a
COMMA ,
IDENFR const5
ASSIGN =
CHARCON 9
SEMICN ;
INTTK int
IDENFR int1
COMMA ,
IDENFR int2
COMMA ,
IDENFR int3
LBRACK [
INTCON 5
RBRACK ]
SEMICN ;
INTTK int
IDENFR abcdefgh
COMMA ,
IDENFR IJKLMNOP
SEMICN ;
CHARTK char
IDENFR charr
LBRACK [
INTCON 11
RBRACK ]
COMMA ,
IDENFR tchar
SEMICN ;
VOIDTK void
IDENFR func1
LPARENT (
<???>
RPARENT )
LBRACE {
INTTK int
IDENFR x
COMMA ,
IDENFR y
COMMA ,
IDENFR i
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Input two integers:
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR x
COMMA ,
IDENFR y
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
IDENFR i
LSS <
INTCON 5
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Ohman
COMMA ,
IDENFR x
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR y
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
<Compound>
RBRACE }
<????????>
VOIDTK void
IDENFR call
LPARENT (
<???>
RPARENT )
LBRACE {
IDENFR func1
LPARENT (
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
<Compound>
RBRACE }
<????????>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR sum
SEMICN ;
IDENFR call
LPARENT (
RPARENT )
SEMICN ;
IDENFR int3
LBRACK [
INTCON 0
RBRACK ]
ASSIGN =
INTCON 0
SEMICN ;
IDENFR int3
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
INTCON 1
SEMICN ;
IDENFR int3
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
INTCON 9
SEMICN ;
IDENFR charr
LBRACK [
INTCON 5
RBRACK ]
ASSIGN =
CHARCON a
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Input some char here:
RPARENT )
SEMICN ;
SCANFTK scanf
LPARENT (
IDENFR tchar
RPARENT )
SEMICN ;
IDENFR sum
ASSIGN =
LPARENT (
IDENFR int3
LBRACK [
INTCON 0
RBRACK ]
PLUS +
IDENFR int3
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
MULT *
INTCON 3
DIV /
IDENFR int3
LBRACK [
INTCON 2
RBRACK ]
MULT *
INTCON 6
MINU -
IDENFR charr
LBRACK [
INTCON 5
RBRACK ]
PLUS +
INTCON 90
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR sum
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON Done!
RPARENT )
SEMICN ;
<Compound>
RBRACE }
<???>
<??>
