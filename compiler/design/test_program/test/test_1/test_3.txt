const A1 = 03,a1 = 06,a2 = +7,a3 = -7,B1 =  4.7,b2 = -0.6,c = 'c',d = '7';

var
  ch: char;
  i,I,pivot,findIndex,fi,answer,num1,num2: integer;
  F,f:real;
  nums: array[20] of integer ;
  arrayReal:array[5] of real;
  arrayChar: array[5] of char;

procedure swapVar(var num1,num2:integer);
var temp:integer;
begin
    temp := num1;
    num1 := num2;
    num2 := temp
end;

procedure swap(num1,num2:integer);
var temp:integer;
begin
    temp := num1;
    num1 := num2;
    num2 := temp
end;

procedure testExpression();
    const
      pi = 3.1415926;
    var
      r:integer;
      area:real;
      procedure sumArray();
            var sum,t: integer;
            begin
                sum := 0;
                for t :=10 downto 1
                   do sum := sum +t;
                write(sum)
            end;
    begin
		r := 5;
        area := pi*r*r;
        I := (A1+a1)*a2/a3;
        arrayReal[0] := 0.1;
        arrayReal[1] := 0.4;
        F := -B1+b2*(arrayReal[0]+arrayReal[1]);
        arrayChar[1] := c;
        arrayChar[2] := d;
		ch := c;
		i := (arrayChar[1]+arrayChar[2])-ch;
        write(I);
        write(F);
        write(area);
        write("i = ",i)
    end;

procedure fibo(i:integer;var ans:integer);
var r1,r2:integer;
begin
    if i<=1
    then
        ans := 1
    else
        begin
            fibo(i-1,r1);
            fibo(i-2,r2);
            ans := r1+r2
        end
end;


function fiboFor(len:integer):integer;
var i,ans:integer;
x,y:integer;
begin
    x :=1;y :=1;ans :=1;
    for i:=2 to len
    do
        begin
            ans := x+y;
            x := y;
            y:=ans
        end;
    fiboFor := ans;;
end;



function binarySearch(pivot,low,high:integer):integer;
    var middle : integer;
    begin
        binarySearch :=-1;
        if low>high
        then binarySearch :=-1
        else
            begin
                repeat
                    begin
                    middle := (low+high)/ 2;
                    if nums[middle] = pivot
                    then
                        begin
                            binarySearch :=middle;
                            high := -1;
                        end
                    else
                        begin
                            if nums[middle]<pivot
                            then low := middle+1
                            else high := middle -1;
                        end;
                    end
                until low>high
            end
    end;


begin
    write("please enter a number(1~10),let us calculate fibo answer");
    read(fi);
    fibo(fi,answer);
    write("fibo :",answer);
    write("fiboFor :",fiboFor(fi));
    write("!#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^`abcdefghijklmnopqrstuvwxyz{|}~");
    ;
    nums[1]:=2;
    nums[2]:=4;
    nums[3]:=6;
    nums[4]:=8;
    nums[5]:=10;
    nums[6]:=012;
    nums[7]:=14;
    nums[8]:=16;
    nums[9]:=18;
    nums[10]:=20;
    nums[11]:=22;
    write("Please enter a number,let us find it in nums");
    read(pivot);
    findIndex := binarySearch(pivot,1,11);
    write("pivot find in nums at ",findIndex);
    write("Please enter two numbers,let uss swap it");
    read(num1,num2);
    swap(num1,num2);
    write("num1 = ",num1);
    write("num2 = ",num2);
    swapVar(num1,num2);
    write("num1 = ",num1);
    write("num2 = ",num2);
    testExpression()
end.

