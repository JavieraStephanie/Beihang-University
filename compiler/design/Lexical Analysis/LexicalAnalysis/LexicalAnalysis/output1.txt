CONSTTK const
INTTK int
IDENFR c0
ASSIGN =
INTCON 9
COMMA ,
IDENFR _t
ASSIGN =
INTCON 0
SEMICN ;
CONSTTK const
CHARTK char
IDENFR wut
ASSIGN =
CHARCON +
COMMA ,
IDENFR bleh
ASSIGN =
CHARCON -
SEMICN ;
INTTK int
IDENFR i
COMMA ,
IDENFR r
COMMA ,
IDENFR arr
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
CHARTK char
IDENFR c
COMMA ,
IDENFR t
SEMICN ;
INTTK int
IDENFR testFunc
LPARENT (
INTTK int
IDENFR n
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR n
GRE >
INTCON 1
RPARENT )
IDENFR n
ASSIGN =
IDENFR n
MINU -
INTCON 1
SEMICN ;
ELSETK else
IDENFR n
ASSIGN =
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR n
EQL ==
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON Done testFunc!
RPARENT )
SEMICN ;
RBRACE }
RETURNTK return
LPARENT (
IDENFR n
PLUS +
INTCON 1
DIV /
INTCON 2
MULT *
INTCON 3
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testFunc2
LPARENT (
RPARENT )
LBRACE {
IFTK if
LPARENT (
INTCON 1
LSS <
INTCON 0
RPARENT )
PRINTFTK printf
LPARENT (
STRCON False
RPARENT )
SEMICN ;
ELSETK else
PRINTFTK printf
LPARENT (
STRCON True
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testLoop
LPARENT (
INTTK int
IDENFR x
RPARENT )
LBRACE {
WHILETK while
LPARENT (
IDENFR x
GEQ >=
INTCON 0
RPARENT )
IDENFR x
ASSIGN =
IDENFR x
MINU -
INTCON 1
SEMICN ;
WHILETK while
LPARENT (
IDENFR x
LEQ <=
INTCON 10
RPARENT )
LBRACE {
IDENFR x
ASSIGN =
IDENFR x
PLUS +
INTCON 1
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON x Incremented!
RPARENT )
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR x
NEQ !=
INTCON 0
RPARENT )
PRINTFTK printf
LPARENT (
STRCON X isn't 0
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
IDENFR testRead
LPARENT (
RPARENT )
LBRACE {
SCANFTK scanf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
RPARENT )
SEMICN ;
RBRACE }
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR testFunc
LPARENT (
INTCON 3
RPARENT )
RPARENT )
SEMICN ;
IDENFR testFunc2
LPARENT (
RPARENT )
SEMICN ;
IDENFR testLoop
LPARENT (
INTCON 10
RPARENT )
SEMICN ;
FORTK for
LPARENT (
IDENFR r
ASSIGN =
INTCON 0
SEMICN ;
IDENFR r
LSS <
INTCON 10
SEMICN ;
IDENFR r
ASSIGN =
IDENFR r
PLUS +
INTCON 1
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON r Incremented!
RPARENT )
SEMICN ;
RBRACE }
PRINTFTK printf
LPARENT (
STRCON Testing this out
COMMA ,
IDENFR testFunc
LPARENT (
INTCON 9
RPARENT )
PLUS +
INTCON 3
DIV /
INTCON 2
RPARENT )
SEMICN ;
RBRACE }
